{
    "sourceFile": "pages/Adduser/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1723210261266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1723210261266,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport styles from './index.module.scss';\r\n// import Navbar from '../../Components/Navbar';\r\nimport Dashboard from '../../Components/Dashboardleft';\r\n\r\nconst SignupForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [error, setError] = useState<any>(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [parentId, setParentId] = useState('');\r\n  const [selectedOption, setSelectedOption] = useState('left');\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      console.log(\"ff\",formData)\r\n      let apiEndpoint = '';\r\n      if (selectedOption === 'left') {\r\n        apiEndpoint = `http://localhost:3000/auth/add-left-child/${parentId}`;\r\n      } else if (selectedOption === 'right') {\r\n        apiEndpoint = `http://localhost:3000/auth/add-right-child/${parentId}`;\r\n      }\r\n\r\n      const token = localStorage.getItem('accessToken'); // Assuming the token is stored with this key\r\n\r\n      const response = await axios.put(apiEndpoint, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to add child');\r\n      }\r\n\r\n      console.log('Child added successfully:', response.data);\r\n      setSuccess(true);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ display: 'flex', height: 'auto' }}>\r\n        <Dashboard />\r\n        <div className={styles.signupformcontainer}>\r\n          <form className={styles.signupForm} onSubmit={handleSubmit}>\r\n            <h2>Add new user</h2>\r\n            {error && <div className={styles.error}>{error.message}</div>}\r\n            {success && <div className={styles.success}>User added successfully!</div>}\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"name\">\r\n                <FontAwesomeIcon icon={faUser} /> Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"email\">\r\n                <FontAwesomeIcon icon={faEnvelope} /> Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"password\">\r\n                <FontAwesomeIcon icon={faLock} /> Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"parentId\">Parent ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"parentId\"\r\n                value={parentId}\r\n                onChange={(e) => setParentId(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <label>Relation</label>\r\n            <div className={styles.formGroup} style={{display:\"flex\",gap:\"20px\",justifyContent:\"center \"}}>\r\n              \r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"left\"\r\n                  name=\"relation\"\r\n                  value=\"left\"\r\n                  checked={selectedOption === 'left'}\r\n                  onChange={(e) => setSelectedOption(e.target.value)}\r\n                />\r\n                <label htmlFor=\"left\">Left Child</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"right\"\r\n                  name=\"relation\"\r\n                  value=\"right\"\r\n                  checked={selectedOption === 'right'}\r\n                  onChange={(e) => setSelectedOption(e.target.value)}\r\n                />\r\n                <label htmlFor=\"right\">Right Child</label>\r\n              </div>\r\n            </div>\r\n            <button className={styles.button} type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n"
        }
    ]
}