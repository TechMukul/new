{
    "sourceFile": "pages/Inventory/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1723210479333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1723210479333,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './index.module.scss';\r\nimport Dashboard from '../../Components/Dashboardleft';\r\nimport Navbar from '../../Components/Navbar';\r\n\r\nconst Index = () => {\r\n  const [skintype, setSkintype] = useState('');\r\n  const [photo, setPhoto] = useState(['']);\r\n  const [castles, setCastles] = useState(['']);\r\n  const [quantity, setQuantity] = useState('');\r\n  const [permalink, setPermalink] = useState('');\r\n  const [buff, setBuff] = useState(['']);\r\n\r\n  const handlePhotoChange = (index: number, value: string) => {\r\n    const newPhoto = [...photo];\r\n    newPhoto[index] = value;\r\n    setPhoto(newPhoto);\r\n  };\r\n\r\n  const handleCastlesChange = (index: number, value: string) => {\r\n    const newCastles = [...castles];\r\n    newCastles[index] = value;\r\n    setCastles(newCastles);\r\n  };\r\n\r\n  const handleBuffChange = (index: number, value: string) => {\r\n    const newBuff = [...buff];\r\n    newBuff[index] = value;\r\n    setBuff(newBuff);\r\n  };\r\n\r\n  const addPhotoField = () => setPhoto([...photo, '']);\r\n  const addCastlesField = () => setCastles([...castles, '']);\r\n  const addBuffField = () => setBuff([...buff, '']);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      skintype,\r\n      photo,\r\n      castles,\r\n      quantity,\r\n      permalink,\r\n      buff,\r\n    };\r\n\r\n    const token = localStorage.getItem('accessToken'); // Assuming the token is stored with this key\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/data/machine', data, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      // Handle the error as needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ display: 'flex' }}>\r\n        <Dashboard />\r\n        <div className={styles.formContainer}>\r\n          <h1>Add Skins Here</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"skintype\">Skin Type</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"skintype\"\r\n                value={skintype}\r\n                onChange={(e) => setSkintype(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label>Photo URLs</label>\r\n              {photo.map((url, index) => (\r\n                <div key={index} className={styles.dynamicField}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={url}\r\n                    onChange={(e) => handlePhotoChange(index, e.target.value)}\r\n                  />\r\n                  {index === photo.length - 1 && (\r\n                    <button type=\"button\" onClick={addPhotoField}>Add Photo</button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label>Castles</label>\r\n              {castles.map((castle, index) => (\r\n                <div key={index} className={styles.dynamicField}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={castle}\r\n                    onChange={(e) => handleCastlesChange(index, e.target.value)}\r\n                  />\r\n                  {index === castles.length - 1 && (\r\n                    <button type=\"button\" onClick={addCastlesField}>Add Castle</button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"quantity\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"permalink\">Permalink</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"permalink\"\r\n                value={permalink}\r\n                onChange={(e) => setPermalink(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label>Buff</label>\r\n              {buff.map((buffItem, index) => (\r\n                <div key={index} className={styles.dynamicField}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={buffItem}\r\n                    onChange={(e) => handleBuffChange(index, e.target.value)}\r\n                  />\r\n                  {index === buff.length - 1 && (\r\n                    <button type=\"button\" onClick={addBuffField}>Add Buff</button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"
        }
    ]
}