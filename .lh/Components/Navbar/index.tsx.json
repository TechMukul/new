{
    "sourceFile": "Components/Navbar/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1723108443982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723108882331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\r\n-import style from './index.module.css';\r\n+import style from './index.module.scss';\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1723109045793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             <p>Home</p>\r\n-            <hr className={style.line} />\r\n+            {/* <hr className={style.line} /> */}\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n"
                },
                {
                    "date": 1723110366738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState } from 'react';\r\n import style from './index.module.scss';\r\n+import Link from 'next/link';\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n \r\n@@ -18,9 +19,9 @@\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             <p>Home</p>\r\n-            {/* <hr className={style.line} /> */}\r\n+            <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n@@ -35,9 +36,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Contact</p>\r\n+            <p><Link href={\"contact\"}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723110395528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"contact\"}>Contact </Link></p>\r\n+            <p><Link className={style.name} href={\"contact\"}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723110412078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link className={style.name} href={\"contact\"}>Contact </Link></p>\r\n+            <p><Link href={\"contact\"} style={{textDecoration:\"none\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723110421509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"contact\"} style={{textDecoration:\"none\"}}>Contact </Link></p>\r\n+            <p><Link href={\"contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723110441283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Home</p>\r\n+          <p><Link href={\"home\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723110449947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"home\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+          <p><Link href={\"home\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723115812558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"home\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n+          <p><Link href={\"/\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723181556709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+            <p><Link href={\"/contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723183523433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Cluster</p>\r\n+          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723183540754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n+          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>All Users </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723183666203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Login</p>\r\n+          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Login </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n       </ul>\r\n"
                },
                {
                    "date": 1723194623901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,11 @@\n     <>\r\n       <div className={style.hamburger} onClick={toggleMenu}>\r\n         â˜°\r\n       </div>\r\n-      <div className={style.image}>\r\n+      <div className={style.image}></div>\r\n+      <div className={style.search_box}>\r\n+      <input className={style.input} placeholder='Enter Favorite Skins'></input>\r\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n@@ -24,9 +26,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>All Users </Link></p>\r\n+            <p>Cluster</p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n@@ -36,15 +38,15 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"/contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+            <p><Link href={\"contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Login </Link></p>\r\n+            <p>Login</p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n       </ul>\r\n@@ -52,6 +54,4 @@\n   );\r\n };\r\n \r\n export default Navbar;\r\n-\r\n-\r\n"
                },
                {
                    "date": 1723195052388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Cluster</p>\r\n+          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723195064467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n+          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>ALlUser </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723195071722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>ALlUser </Link></p>\r\n+          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>Alluser </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723195114957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,15 +38,15 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+            <p><Link href={\"/contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>Login</p>\r\n+          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n       </ul>\r\n"
                },
                {
                    "date": 1723195124014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Login </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n       </ul>\r\n"
                },
                {
                    "date": 1723195146883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Alluser\"} style={{textDecoration:\"none\",color:\"white\"}}>Alluser </Link></p>\r\n+          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>Alluser </Link></p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n"
                },
                {
                    "date": 1723195582386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,60 @@\n-import React, { useState } from 'react';\r\n+import React, { useEffect, useState } from 'react';\r\n import style from './index.module.scss';\r\n import Link from 'next/link';\r\n+import axios from 'axios'\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n+  const [coin, setCoins] = useState<number>(0);\r\n+  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n+  const [userRole, setUserRole] = useState<string | null>(null);\r\n \r\n   const toggleMenu = () => {\r\n     setIsMenuOpen(!isMenuOpen);\r\n   };\r\n+  useEffect(() => {\r\n+    const token = localStorage.getItem(\"accessToken\");\r\n+    const role = localStorage.getItem(\"role\");\r\n+    setIsAuthenticated(!!token);\r\n+    setUserRole(role);\r\n \r\n+    const fetchCoins = async () => {\r\n+      if (token) {\r\n+        try {\r\n+          const userId = localStorage.getItem(\"userId\");\r\n+          if (userId) {\r\n+            const coinsResponse = await axios.get(\r\n+              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n+              {\r\n+                headers: {\r\n+                  Authorization: `Bearer ${token}`,\r\n+                  \"Content-Type\": \"application/json\",\r\n+                },\r\n+              }\r\n+            );\r\n+            setCoins(coinsResponse.data.coins);\r\n+          }\r\n+        } catch (error) {\r\n+          console.error(\"Error fetching coins:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchCoins();\r\n+  }, [isAuthenticated]);\r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem(\"accessToken\");\r\n+    localStorage.removeItem(\"userName\");\r\n+    localStorage.removeItem(\"userId\");\r\n+    localStorage.removeItem(\"userCoins\");\r\n+    localStorage.removeItem(\"role\");\r\n+    setCoins(0);\r\n+    setIsAuthenticated(false);\r\n+    setUserRole(null);\r\n+    router.push(\"/\");\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <div className={style.hamburger} onClick={toggleMenu}>\r\n         â˜°\r\n@@ -44,10 +89,21 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n+          {!isAuthenticated ? (\r\n           <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Login </Link></p>\r\n-            <hr className={style.line} />\r\n+            <hr className={style.line} /> ) : (  <Button\r\n+              variant=\"outline-light\"\r\n+              className={styles.links}\r\n+              onClick={handleLogout}\r\n+            >\r\n+              <FontAwesomeIcon\r\n+                icon={faSignOutAlt}\r\n+                className={styles.icon}\r\n+              />\r\n+              Logout\r\n+            </Button> )}\r\n           </div>\r\n         </li>\r\n       </ul>\r\n     </>\r\n"
                },
                {
                    "date": 1723195600923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,16 @@\n import React, { useEffect, useState } from 'react';\r\n import style from './index.module.scss';\r\n import Link from 'next/link';\r\n import axios from 'axios'\r\n+import { useRouter } from 'next/router';\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n   const [coin, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n+  const router =useRouter();\r\n \r\n   const toggleMenu = () => {\r\n     setIsMenuOpen(!isMenuOpen);\r\n   };\r\n"
                },
                {
                    "date": 1723195774180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,21 @@\n import React, { useEffect, useState } from 'react';\r\n import style from './index.module.scss';\r\n import Link from 'next/link';\r\n-import axios from 'axios'\r\n+import axios from 'axios';\r\n import { useRouter } from 'next/router';\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n-  const [coin, setCoins] = useState<number>(0);\r\n+  const [coins, setCoins] = useState<number>(0);  // Fixed variable name for clarity\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n-  const router =useRouter();\r\n+  const router = useRouter();\r\n \r\n   const toggleMenu = () => {\r\n-    setIsMenuOpen(!isMenuOpen);\r\n+    setIsMenuOpen(prevState => !prevState);\r\n   };\r\n+\r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     setIsAuthenticated(!!token);\r\n@@ -24,18 +25,18 @@\n       if (token) {\r\n         try {\r\n           const userId = localStorage.getItem(\"userId\");\r\n           if (userId) {\r\n-            const coinsResponse = await axios.get(\r\n+            const response = await axios.get(\r\n               `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n               {\r\n                 headers: {\r\n                   Authorization: `Bearer ${token}`,\r\n                   \"Content-Type\": \"application/json\",\r\n                 },\r\n               }\r\n             );\r\n-            setCoins(coinsResponse.data.coins);\r\n+            setCoins(response.data.coins);\r\n           }\r\n         } catch (error) {\r\n           console.error(\"Error fetching coins:\", error);\r\n         }\r\n@@ -43,8 +44,9 @@\n     };\r\n \r\n     fetchCoins();\r\n   }, [isAuthenticated]);\r\n+\r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n@@ -62,20 +64,28 @@\n         â˜°\r\n       </div>\r\n       <div className={style.image}></div>\r\n       <div className={style.search_box}>\r\n-      <input className={style.input} placeholder='Enter Favorite Skins'></input>\r\n+        <input className={style.input} placeholder='Enter Favorite Skins' />\r\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/\"} style={{textDecoration:\"none\",color:\"white\"}}>Home </Link></p>\r\n+            <p>\r\n+              <Link href={\"/\"} passHref>\r\n+                <a style={{ textDecoration: \"none\", color: \"white\" }}>Home</a>\r\n+              </Link>\r\n+            </p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          <p><Link href={\"/Tree\"} style={{textDecoration:\"none\",color:\"white\"}}>Alluser </Link></p>\r\n+            <p>\r\n+              <Link href={\"/Tree\"} passHref>\r\n+                <a style={{ textDecoration: \"none\", color: \"white\" }}>Alluser</a>\r\n+              </Link>\r\n+            </p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n@@ -85,27 +95,33 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p><Link href={\"/contact\"} style={{textDecoration:\"none\",color:\"white\"}}>Contact </Link></p>\r\n+            <p>\r\n+              <Link href={\"/contact\"} passHref>\r\n+                <a style={{ textDecoration: \"none\", color: \"white\" }}>Contact</a>\r\n+              </Link>\r\n+            </p>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-          {!isAuthenticated ? (\r\n-          <p><Link href={\"/Login\"} style={{textDecoration:\"none\",color:\"white\"}}>Login </Link></p>\r\n-            <hr className={style.line} /> ) : (  <Button\r\n-              variant=\"outline-light\"\r\n-              className={styles.links}\r\n-              onClick={handleLogout}\r\n-            >\r\n-              <FontAwesomeIcon\r\n-                icon={faSignOutAlt}\r\n-                className={styles.icon}\r\n-              />\r\n-              Logout\r\n-            </Button> )}\r\n+            {!isAuthenticated ? (\r\n+              <p>\r\n+                <Link href={\"/Login\"} passHref>\r\n+                  <a style={{ textDecoration: \"none\", color: \"white\" }}>Login</a>\r\n+                </Link>\r\n+              </p>\r\n+            ) : (\r\n+              <button\r\n+                className={style.links}\r\n+                onClick={handleLogout}\r\n+              >\r\n+                Logout\r\n+              </button>\r\n+            )}\r\n+            <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n       </ul>\r\n     </>\r\n"
                },
                {
                    "date": 1723195853316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,23 +69,19 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>\r\n-              <Link href={\"/\"} passHref>\r\n-                <a style={{ textDecoration: \"none\", color: \"white\" }}>Home</a>\r\n-              </Link>\r\n-            </p>\r\n+            <Link href=\"/\">\r\n+              <p>Home</p>\r\n+            </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>\r\n-              <Link href={\"/Tree\"} passHref>\r\n-                <a style={{ textDecoration: \"none\", color: \"white\" }}>Alluser</a>\r\n-              </Link>\r\n-            </p>\r\n+            <Link href=\"/Tree\">\r\n+              <p>Alluser</p>\r\n+            </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n@@ -95,24 +91,20 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <p>\r\n-              <Link href={\"/contact\"} passHref>\r\n-                <a style={{ textDecoration: \"none\", color: \"white\" }}>Contact</a>\r\n-              </Link>\r\n-            </p>\r\n+            <Link href=\"/contact\">\r\n+              <p>Contact</p>\r\n+            </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <p>\r\n-                <Link href={\"/Login\"} passHref>\r\n-                  <a style={{ textDecoration: \"none\", color: \"white\" }}>Login</a>\r\n-                </Link>\r\n-              </p>\r\n+              <Link href=\"/Login\">\r\n+                <p>Login</p>\r\n+              </Link>\r\n             ) : (\r\n               <button\r\n                 className={style.links}\r\n                 onClick={handleLogout}\r\n"
                },
                {
                    "date": 1723195882218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,17 +69,17 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/\">\r\n+            <Link href=\"/\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n               <p>Home</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/Tree\">\r\n+            <Link href=\"/Tree\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n               <p>Alluser</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n@@ -91,18 +91,18 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/contact\">\r\n+            <Link href=\"/contact\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n               <p>Contact</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <Link href=\"/Login\">\r\n+              <Link href=\"/Login\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n                 <p>Login</p>\r\n               </Link>\r\n             ) : (\r\n               <button\r\n"
                },
                {
                    "date": 1723196102361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n-    setIsAuthenticated(!!token);\r\n+    setIsAuthenticated(true);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n       if (token) {\r\n"
                },
                {
                    "date": 1723196126049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,8 +107,9 @@\n             ) : (\r\n               <button\r\n                 className={style.links}\r\n                 onClick={handleLogout}\r\n+                style={{textDecoration:\"none\",color:\"white\"}}\r\n               >\r\n                 Logout\r\n               </button>\r\n             )}\r\n"
                },
                {
                    "date": 1723196132890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n             ) : (\r\n               <button\r\n                 className={style.links}\r\n                 onClick={handleLogout}\r\n-                style={{textDecoration:\"none\",color:\"white\"}}\r\n+                \r\n               >\r\n                 Logout\r\n               </button>\r\n             )}\r\n"
                },
                {
                    "date": 1723196227216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n-    setIsAuthenticated(true);\r\n+    setIsAuthenticated();\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n       if (token) {\r\n@@ -107,9 +107,8 @@\n             ) : (\r\n               <button\r\n                 className={style.links}\r\n                 onClick={handleLogout}\r\n-                \r\n               >\r\n                 Logout\r\n               </button>\r\n             )}\r\n"
                },
                {
                    "date": 1723196322420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,26 @@\n-import React, { useEffect, useState } from 'react';\r\n-import style from './index.module.scss';\r\n-import Link from 'next/link';\r\n-import axios from 'axios';\r\n-import { useRouter } from 'next/router';\r\n+import React, { useEffect, useState } from \"react\";\r\n+import style from \"./index.module.scss\";\r\n+import Link from \"next/link\";\r\n+import axios from \"axios\";\r\n+import { useRouter } from \"next/router\";\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n-  const [coins, setCoins] = useState<number>(0);  // Fixed variable name for clarity\r\n+  const [coins, setCoins] = useState<number>(0); // Fixed variable name for clarity\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n \r\n   const toggleMenu = () => {\r\n-    setIsMenuOpen(prevState => !prevState);\r\n+    setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n+    if(token ){  setIsAuthenticated(true);}\r\n     const role = localStorage.getItem(\"role\");\r\n-    setIsAuthenticated();\r\n+    setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n       if (token) {\r\n@@ -64,22 +65,25 @@\n         â˜°\r\n       </div>\r\n       <div className={style.image}></div>\r\n       <div className={style.search_box}>\r\n-        <input className={style.input} placeholder='Enter Favorite Skins' />\r\n+        <input className={style.input} placeholder=\"Enter Favorite Skins\" />\r\n       </div>\r\n-      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n+      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n+            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Home</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/Tree\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n+            <Link\r\n+              href=\"/Tree\"\r\n+              style={{ textDecoration: \"none\", color: \"white\" }}\r\n+            >\r\n               <p>Alluser</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n@@ -91,25 +95,28 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/contact\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n+            <Link\r\n+              href=\"/contact\"\r\n+              style={{ textDecoration: \"none\", color: \"white\" }}\r\n+            >\r\n               <p>Contact</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <Link href=\"/Login\"  style={{textDecoration:\"none\",color:\"white\"}}>\r\n+              <Link\r\n+                href=\"/Login\"\r\n+                style={{ textDecoration: \"none\", color: \"white\" }}\r\n+              >\r\n                 <p>Login</p>\r\n               </Link>\r\n             ) : (\r\n-              <button\r\n-                className={style.links}\r\n-                onClick={handleLogout}\r\n-              >\r\n+              <button className={style.links} onClick={handleLogout}>\r\n                 Logout\r\n               </button>\r\n             )}\r\n             <hr className={style.line} />\r\n"
                },
                {
                    "date": 1723196348905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,11 @@\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     if(token ){  setIsAuthenticated(true);}\r\n     const role = localStorage.getItem(\"role\");\r\n+    if(!token){\r\n+      setIsAuthenticated(false)\r\n+    }\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n"
                },
                {
                    "date": 1723196461068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useRouter } from \"next/router\";\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n-  const [coins, setCoins] = useState<number>(0); // Fixed variable name for clarity\r\n+  const [coins, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n \r\n@@ -16,13 +16,11 @@\n   };\r\n \r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n-    if(token ){  setIsAuthenticated(true);}\r\n     const role = localStorage.getItem(\"role\");\r\n-    if(!token){\r\n-      setIsAuthenticated(false)\r\n-    }\r\n+    \r\n+    // Update authentication status and user role\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n@@ -73,20 +71,17 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+            <Link href=\"/\">\r\n               <p>Home</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link\r\n-              href=\"/Tree\"\r\n-              style={{ textDecoration: \"none\", color: \"white\" }}\r\n-            >\r\n+            <Link href=\"/Tree\">\r\n               <p>Alluser</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n@@ -98,24 +93,18 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link\r\n-              href=\"/contact\"\r\n-              style={{ textDecoration: \"none\", color: \"white\" }}\r\n-            >\r\n+            <Link href=\"/contact\">\r\n               <p>Contact</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <Link\r\n-                href=\"/Login\"\r\n-                style={{ textDecoration: \"none\", color: \"white\" }}\r\n-              >\r\n+              <Link href=\"/Login\">\r\n                 <p>Login</p>\r\n               </Link>\r\n             ) : (\r\n               <button className={style.links} onClick={handleLogout}>\r\n"
                },
                {
                    "date": 1723196586507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,17 +71,17 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/\">\r\n+            <Link href=\"/\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Home</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/Tree\">\r\n+            <Link href=\"/Tree\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Alluser</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n@@ -93,18 +93,18 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/contact\">\r\n+            <Link href=\"/contact\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Contact</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <Link href=\"/Login\">\r\n+              <Link href=\"/Login\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                 <p>Login</p>\r\n               </Link>\r\n             ) : (\r\n               <button className={style.links} onClick={handleLogout}>\r\n"
                },
                {
                    "date": 1723198281477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,11 @@\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n   useEffect(() => {\r\n+    // Add or remove a class to control body overflow\r\n+    document.body.style.overflow = isMenuOpen ? \"hidden\" : \"auto\";\r\n+\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     \r\n     // Update authentication status and user role\r\n@@ -45,9 +48,9 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isAuthenticated]);\r\n+  }, [isMenuOpen, isAuthenticated]);\r\n \r\n   const handleLogout = () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n@@ -71,17 +74,17 @@\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Home</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/Tree\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+            <Link href=\"/Tree\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Alluser</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n@@ -93,18 +96,18 @@\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n-            <Link href=\"/contact\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+            <Link href=\"/contact\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n               <p>Contact</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n         <li className={style.items}>\r\n           <div className={style.name}>\r\n             {!isAuthenticated ? (\r\n-              <Link href=\"/Login\"    style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+              <Link href=\"/Login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                 <p>Login</p>\r\n               </Link>\r\n             ) : (\r\n               <button className={style.links} onClick={handleLogout}>\r\n"
                },
                {
                    "date": 1723208207654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,13 @@\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n   useEffect(() => {\r\n-    // Add or remove a class to control body overflow\r\n     document.body.style.overflow = isMenuOpen ? \"hidden\" : \"auto\";\r\n \r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n-    \r\n-    // Update authentication status and user role\r\n+\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n"
                },
                {
                    "date": 1723208282345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,12 @@\n \r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n \r\n+    // Debugging logs\r\n+    console.log(\"Token on mount:\", token);\r\n+    console.log(\"Role on mount:\", role);\r\n+\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n@@ -46,19 +50,27 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isMenuOpen, isAuthenticated]);\r\n+  }, [isMenuOpen, isAuthenticated]); // Dependency on `isAuthenticated` to update when it changes\r\n \r\n   const handleLogout = () => {\r\n+    // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n     localStorage.removeItem(\"userCoins\");\r\n     localStorage.removeItem(\"role\");\r\n+\r\n+    // Reset state\r\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n+\r\n+    // Debugging logs\r\n+    console.log(\"Logged out. Redirecting to home page.\");\r\n+\r\n+    // Redirect to home page\r\n     router.push(\"/\");\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723208360055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,22 +10,19 @@\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n \r\n+  // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n+  // Check authentication status on component mount and on dependency changes\r\n   useEffect(() => {\r\n-    document.body.style.overflow = isMenuOpen ? \"hidden\" : \"auto\";\r\n-\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n \r\n-    // Debugging logs\r\n-    console.log(\"Token on mount:\", token);\r\n-    console.log(\"Role on mount:\", role);\r\n-\r\n+    // Update state based on localStorage\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n@@ -50,9 +47,9 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isMenuOpen, isAuthenticated]); // Dependency on `isAuthenticated` to update when it changes\r\n+  }, []); // Empty dependency array to run only on mount\r\n \r\n   const handleLogout = () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n@@ -69,9 +66,11 @@\n     // Debugging logs\r\n     console.log(\"Logged out. Redirecting to home page.\");\r\n \r\n     // Redirect to home page\r\n-    router.push(\"/\");\r\n+    router.push(\"/\").then(() => {\r\n+      window.location.reload(); // Ensure the page reloads to reflect logout\r\n+    });\r\n   };\r\n \r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1723208387677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,19 +10,22 @@\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n \r\n-  // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n-  // Check authentication status on component mount and on dependency changes\r\n   useEffect(() => {\r\n+    document.body.style.overflow = isMenuOpen ? \"hidden\" : \"auto\";\r\n+\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n \r\n-    // Update state based on localStorage\r\n+    // Debugging logs\r\n+    console.log(\"Token on mount:\", token);\r\n+    console.log(\"Role on mount:\", role);\r\n+\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n \r\n     const fetchCoins = async () => {\r\n@@ -47,9 +50,9 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, []); // Empty dependency array to run only on mount\r\n+  }, [isMenuOpen, isAuthenticated]); // Dependency on `isAuthenticated` to update when it changes\r\n \r\n   const handleLogout = () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n@@ -66,11 +69,9 @@\n     // Debugging logs\r\n     console.log(\"Logged out. Redirecting to home page.\");\r\n \r\n     // Redirect to home page\r\n-    router.push(\"/\").then(() => {\r\n-      window.location.reload(); // Ensure the page reloads to reflect logout\r\n-    });\r\n+    router.push(\"/\");\r\n   };\r\n \r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1723208462602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,51 +10,51 @@\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n \r\n+  // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n \r\n+  // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n-    document.body.style.overflow = isMenuOpen ? \"hidden\" : \"auto\";\r\n+    const checkAuth = () => {\r\n+      const token = localStorage.getItem(\"accessToken\");\r\n+      const role = localStorage.getItem(\"role\");\r\n \r\n-    const token = localStorage.getItem(\"accessToken\");\r\n-    const role = localStorage.getItem(\"role\");\r\n+      setIsAuthenticated(!!token);\r\n+      setUserRole(role);\r\n \r\n-    // Debugging logs\r\n-    console.log(\"Token on mount:\", token);\r\n-    console.log(\"Role on mount:\", role);\r\n-\r\n-    setIsAuthenticated(!!token);\r\n-    setUserRole(role);\r\n-\r\n-    const fetchCoins = async () => {\r\n-      if (token) {\r\n-        try {\r\n-          const userId = localStorage.getItem(\"userId\");\r\n-          if (userId) {\r\n-            const response = await axios.get(\r\n-              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n-              {\r\n-                headers: {\r\n-                  Authorization: `Bearer ${token}`,\r\n-                  \"Content-Type\": \"application/json\",\r\n-                },\r\n-              }\r\n-            );\r\n-            setCoins(response.data.coins);\r\n+      const fetchCoins = async () => {\r\n+        if (token) {\r\n+          try {\r\n+            const userId = localStorage.getItem(\"userId\");\r\n+            if (userId) {\r\n+              const response = await axios.get(\r\n+                `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n+                {\r\n+                  headers: {\r\n+                    Authorization: `Bearer ${token}`,\r\n+                    \"Content-Type\": \"application/json\",\r\n+                  },\r\n+                }\r\n+              );\r\n+              setCoins(response.data.coins);\r\n+            }\r\n+          } catch (error) {\r\n+            console.error(\"Error fetching coins:\", error);\r\n           }\r\n-        } catch (error) {\r\n-          console.error(\"Error fetching coins:\", error);\r\n         }\r\n-      }\r\n+      };\r\n+\r\n+      fetchCoins();\r\n     };\r\n \r\n-    fetchCoins();\r\n-  }, [isMenuOpen, isAuthenticated]); // Dependency on `isAuthenticated` to update when it changes\r\n+    checkAuth();\r\n+  }, []); // Run only on mount\r\n \r\n-  const handleLogout = () => {\r\n+  const handleLogout = async () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n@@ -65,13 +65,13 @@\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n \r\n-    // Debugging logs\r\n-    console.log(\"Logged out. Redirecting to home page.\");\r\n-\r\n     // Redirect to home page\r\n-    router.push(\"/\");\r\n+    router.push(\"/\").then(() => {\r\n+      // Ensure the page reloads to reflect logout\r\n+      window.location.reload();\r\n+    });\r\n   };\r\n \r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1723208539097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     const checkAuth = () => {\r\n       const token = localStorage.getItem(\"accessToken\");\r\n       const role = localStorage.getItem(\"role\");\r\n \r\n-      setIsAuthenticated(!!token);\r\n+      setIsAuthenticated(true);\r\n       setUserRole(role);\r\n \r\n       const fetchCoins = async () => {\r\n         if (token) {\r\n"
                },
                {
                    "date": 1723208568538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,12 @@\n   useEffect(() => {\r\n     const checkAuth = () => {\r\n       const token = localStorage.getItem(\"accessToken\");\r\n       const role = localStorage.getItem(\"role\");\r\n-\r\n-      setIsAuthenticated(true);\r\n+if(token){\r\n+  setIsAuthenticated(true)\r\n+}\r\n+      // setIsAuthenticated(t);\r\n       setUserRole(role);\r\n \r\n       const fetchCoins = async () => {\r\n         if (token) {\r\n"
                },
                {
                    "date": 1723208643271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n     const checkAuth = () => {\r\n       const token = localStorage.getItem(\"accessToken\");\r\n+      console.log(token)\r\n       const role = localStorage.getItem(\"role\");\r\n if(token){\r\n   setIsAuthenticated(true)\r\n }\r\n"
                },
                {
                    "date": 1723208680207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,45 +17,42 @@\n   };\r\n \r\n   // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n-    const checkAuth = () => {\r\n-      const token = localStorage.getItem(\"accessToken\");\r\n-      console.log(token)\r\n-      const role = localStorage.getItem(\"role\");\r\n-if(token){\r\n-  setIsAuthenticated(true)\r\n-}\r\n-      // setIsAuthenticated(t);\r\n-      setUserRole(role);\r\n+    const token = localStorage.getItem(\"accessToken\");\r\n+    const role = localStorage.getItem(\"role\");\r\n \r\n-      const fetchCoins = async () => {\r\n-        if (token) {\r\n-          try {\r\n-            const userId = localStorage.getItem(\"userId\");\r\n-            if (userId) {\r\n-              const response = await axios.get(\r\n-                `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n-                {\r\n-                  headers: {\r\n-                    Authorization: `Bearer ${token}`,\r\n-                    \"Content-Type\": \"application/json\",\r\n-                  },\r\n-                }\r\n-              );\r\n-              setCoins(response.data.coins);\r\n-            }\r\n-          } catch (error) {\r\n-            console.error(\"Error fetching coins:\", error);\r\n+    console.log(\"Token:\", token);\r\n+    console.log(\"Role:\", role);\r\n+\r\n+    // Update state based on localStorage\r\n+    setIsAuthenticated(!!token);\r\n+    setUserRole(role);\r\n+\r\n+    const fetchCoins = async () => {\r\n+      if (token) {\r\n+        try {\r\n+          const userId = localStorage.getItem(\"userId\");\r\n+          if (userId) {\r\n+            const response = await axios.get(\r\n+              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n+              {\r\n+                headers: {\r\n+                  Authorization: `Bearer ${token}`,\r\n+                  \"Content-Type\": \"application/json\",\r\n+                },\r\n+              }\r\n+            );\r\n+            setCoins(response.data.coins);\r\n           }\r\n+        } catch (error) {\r\n+          console.error(\"Error fetching coins:\", error);\r\n         }\r\n-      };\r\n-\r\n-      fetchCoins();\r\n+      }\r\n     };\r\n \r\n-    checkAuth();\r\n-  }, []); // Run only on mount\r\n+    fetchCoins();\r\n+  }, []); // Empty dependency array to run only on mount\r\n \r\n   const handleLogout = async () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n"
                },
                {
                    "date": 1723208907490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,25 @@\n   // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n+  useEffect(() => {\r\n+    const token = localStorage.getItem(\"accessToken\");\r\n+    if (token) {\r\n+      router.push(\"/home\");\r\n+    }\r\n \r\n+    const handlePopState = () => {\r\n+      router.push(\"/home\");\r\n+    };\r\n+\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, [router]);\r\n+\r\n   // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n"
                },
                {
                    "date": 1723208923717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,25 +14,10 @@\n   // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n   };\r\n-  useEffect(() => {\r\n-    const token = localStorage.getItem(\"accessToken\");\r\n-    if (token) {\r\n-      router.push(\"/home\");\r\n-    }\r\n+  \r\n \r\n-    const handlePopState = () => {\r\n-      router.push(\"/home\");\r\n-    };\r\n-\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, [router]);\r\n-\r\n   // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n"
                },
                {
                    "date": 1723208967976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,43 +17,32 @@\n   };\r\n   \r\n \r\n   // Check authentication status and fetch user data\r\n-  useEffect(() => {\r\n-    const token = localStorage.getItem(\"accessToken\");\r\n-    const role = localStorage.getItem(\"role\");\r\n-\r\n-    console.log(\"Token:\", token);\r\n-    console.log(\"Role:\", role);\r\n-\r\n-    // Update state based on localStorage\r\n-    setIsAuthenticated(!!token);\r\n-    setUserRole(role);\r\n-\r\n-    const fetchCoins = async () => {\r\n-      if (token) {\r\n-        try {\r\n-          const userId = localStorage.getItem(\"userId\");\r\n-          if (userId) {\r\n-            const response = await axios.get(\r\n-              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n-              {\r\n-                headers: {\r\n-                  Authorization: `Bearer ${token}`,\r\n-                  \"Content-Type\": \"application/json\",\r\n-                },\r\n-              }\r\n-            );\r\n-            setCoins(response.data.coins);\r\n-          }\r\n-        } catch (error) {\r\n-          console.error(\"Error fetching coins:\", error);\r\n+  const fetchCoins = async () => {\r\n+    if (token) {\r\n+      try {\r\n+        const userId = localStorage.getItem(\"userId\");\r\n+        if (userId) {\r\n+          const coinsResponse = await axios.get(\r\n+            `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n+            {\r\n+              headers: {\r\n+                Authorization: `Bearer ${token}`,\r\n+                \"Content-Type\": \"application/json\",\r\n+              },\r\n+            }\r\n+          );\r\n+          setCoins(coinsResponse.data.coins);\r\n         }\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching coins:\", error);\r\n       }\r\n-    };\r\n+    }\r\n+  };\r\n \r\n-    fetchCoins();\r\n-  }, []); // Empty dependency array to run only on mount\r\n+  fetchCoins();\r\n+}, [isAuthenticated]); // Empty dependency array to run only on mount\r\n \r\n   const handleLogout = async () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n"
                },
                {
                    "date": 1723209006317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   const [coins, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const router = useRouter();\r\n+  \r\n \r\n   // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n     setIsMenuOpen((prevState) => !prevState);\r\n"
                },
                {
                    "date": 1723209043295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,32 +18,38 @@\n   };\r\n   \r\n \r\n   // Check authentication status and fetch user data\r\n-  const fetchCoins = async () => {\r\n-    if (token) {\r\n-      try {\r\n-        const userId = localStorage.getItem(\"userId\");\r\n-        if (userId) {\r\n-          const coinsResponse = await axios.get(\r\n-            `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n-            {\r\n-              headers: {\r\n-                Authorization: `Bearer ${token}`,\r\n-                \"Content-Type\": \"application/json\",\r\n-              },\r\n-            }\r\n-          );\r\n-          setCoins(coinsResponse.data.coins);\r\n+  useEffect(() => {\r\n+    const token = localStorage.getItem(\"accessToken\");\r\n+    const role = localStorage.getItem(\"role\");\r\n+    setIsAuthenticated(!!token);\r\n+    setUserRole(role);\r\n+\r\n+    const fetchCoins = async () => {\r\n+      if (token) {\r\n+        try {\r\n+          const userId = localStorage.getItem(\"userId\");\r\n+          if (userId) {\r\n+            const coinsResponse = await axios.get(\r\n+              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n+              {\r\n+                headers: {\r\n+                  Authorization: `Bearer ${token}`,\r\n+                  \"Content-Type\": \"application/json\",\r\n+                },\r\n+              }\r\n+            );\r\n+            setCoins(coinsResponse.data.coins);\r\n+          }\r\n+        } catch (error) {\r\n+          console.error(\"Error fetching coins:\", error);\r\n         }\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching coins:\", error);\r\n       }\r\n-    }\r\n-  };\r\n+    };\r\n \r\n-  fetchCoins();\r\n-}, [isAuthenticated]); // Empty dependency array to run only on mount\r\n+    fetchCoins();\r\n+  }, [isAuthenticated]); // Empty dependency array to run only on mount\r\n \r\n   const handleLogout = async () => {\r\n     // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n"
                },
                {
                    "date": 1723209135244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,13 +62,10 @@\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n \r\n-    // Redirect to home page\r\n-    router.push(\"/\").then(() => {\r\n-      // Ensure the page reloads to reflect logout\r\n-      window.location.reload();\r\n-    });\r\n+  \r\n+  \r\n   };\r\n \r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1723209229328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,51 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import style from \"./index.module.scss\";\r\n+import { useEffect, useState } from \"react\";\r\n import Link from \"next/link\";\r\n+import { Navbar, Nav, Container, Button, Form } from \"react-bootstrap\";\r\n+import { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\r\n+import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n+import {\r\n+  faBars,\r\n+  faHome,\r\n+  faUsers,\r\n+  faPhone,\r\n+  faSignOutAlt,\r\n+  faKey,\r\n+} from \"@fortawesome/free-solid-svg-icons\";\r\n+import styles from \"./index.module.scss\";\r\n+import { useRouter } from \"next/router\";\r\n import axios from \"axios\";\r\n-import { useRouter } from \"next/router\";\r\n+import Image from \"next/image\";\r\n+import logo from \"@/public/logo.png\";\r\n \r\n-const Navbar = () => {\r\n-  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n-  const [coins, setCoins] = useState<number>(0);\r\n+const Header = () => {\r\n+  const [isFixed, setIsFixed] = useState(false);\r\n+  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n+  const [isOpen, setIsOpen] = useState(false);\r\n+  const [isModalOpen, setIsModalOpen] = useState(false);\r\n+  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\r\n+  const [redeemAmount, setRedeemAmount] = useState(\"\");\r\n+  const [coin, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n+  const [newPassword, setNewPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n   const router = useRouter();\r\n-  \r\n \r\n-  // Toggle menu visibility\r\n-  const toggleMenu = () => {\r\n-    setIsMenuOpen((prevState) => !prevState);\r\n-  };\r\n-  \r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      const scrolled = window.scrollY > 50;\r\n+      setIsFixed(scrolled);\r\n+      setBackgroundColor(scrolled ? \"#006739\" : \"transparent\");\r\n+    };\r\n \r\n-  // Check authentication status and fetch user data\r\n+    window.addEventListener(\"scroll\", handleScroll);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener(\"scroll\", handleScroll);\r\n+    };\r\n+  }, []);\r\n+\r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     setIsAuthenticated(!!token);\r\n@@ -47,83 +73,296 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isAuthenticated]); // Empty dependency array to run only on mount\r\n+  }, [isAuthenticated]);\r\n \r\n-  const handleLogout = async () => {\r\n-    // Remove items from localStorage\r\n+  const handleToggle = () => {\r\n+    setIsOpen(!isOpen);\r\n+  };\r\n+\r\n+  const handleLogout = () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n     localStorage.removeItem(\"userCoins\");\r\n     localStorage.removeItem(\"role\");\r\n-\r\n-    // Reset state\r\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n+    router.push(\"/\");\r\n+  };\r\n \r\n-  \r\n-  \r\n+  const handleOpenModal = () => {\r\n+    setIsModalOpen(true);\r\n   };\r\n \r\n+  const handleCloseModal = () => {\r\n+    setIsModalOpen(false);\r\n+    setIsPasswordModalOpen(false);\r\n+  };\r\n+\r\n+  const handleRedeemChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    setRedeemAmount(e.target.value);\r\n+  };\r\n+\r\n+  const handleRedeem = async () => {\r\n+    const coins = parseInt(redeemAmount, 10);\r\n+    if (isNaN(coins) || coins <= 0) {\r\n+      alert(\"Please enter a valid amount.\");\r\n+      return;\r\n+    }\r\n+    if (coins > coin) {\r\n+      alert(\"You do not have enough coins to redeem this amount.\");\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem(\"accessToken\");\r\n+      const userId = localStorage.getItem(\"userId\");\r\n+      if (token && userId) {\r\n+        await axios.post(\r\n+          `https://www.referback.trollsufficient.com/admin/redeem-coins`,\r\n+          { userId, coins },\r\n+          {\r\n+            headers: {\r\n+              Authorization: `Bearer ${token}`,\r\n+              \"Content-Type\": \"application/json\",\r\n+            },\r\n+          }\r\n+        );\r\n+\r\n+        setCoins(coin - coins);\r\n+        setRedeemAmount(\"\");\r\n+        handleCloseModal();\r\n+        window.location.reload();\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Error redeeming coins:\", error);\r\n+      alert(\"There was an error redeeming coins. Please try again.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleChangePassword = async () => {\r\n+    if (newPassword !== confirmPassword) {\r\n+      alert(\"Passwords do not match.\");\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem(\"accessToken\");\r\n+      const userId = localStorage.getItem(\"userId\"); // Make sure this is correct\r\n+      if (token && userId) {\r\n+        await axios.put(\r\n+          `https://www.referback.trollsufficient.com/admin/set-password/${userId}`,\r\n+          { password: newPassword },\r\n+          {\r\n+            headers: {\r\n+              Authorization: `Bearer ${token}`,\r\n+              \"Content-Type\": \"application/json\",\r\n+            },\r\n+          }\r\n+        );\r\n+\r\n+        alert(\"Password changed successfully.\");\r\n+        setNewPassword(\"\");\r\n+        setConfirmPassword(\"\");\r\n+        handleCloseModal();\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Error changing password:\", error);\r\n+      alert(\"There was an error changing the password. Please try again.\");\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <>\r\n-      <div className={style.hamburger} onClick={toggleMenu}>\r\n-        â˜°\r\n-      </div>\r\n-      <div className={style.image}></div>\r\n-      <div className={style.search_box}>\r\n-        <input className={style.input} placeholder=\"Enter Favorite Skins\" />\r\n-      </div>\r\n-      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n-        <li className={style.items}>\r\n-          <div className={style.name}>\r\n-            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n-              <p>Home</p>\r\n-            </Link>\r\n-            <hr className={style.line} />\r\n+    <div className={styles.container}>\r\n+      <header\r\n+        className={`${styles.navbar} ${isFixed ? styles.fixed : \"\"}`}\r\n+        style={{ backgroundColor }}\r\n+      >\r\n+        <Navbar expand=\"lg\" bg=\"transparent\">\r\n+          <Container style={{height:\"70px\"}}>\r\n+            {/* <Link href=\"/\" passHref legacyBehavior>\r\n+              <a className={styles.brand}>MyApp</a>\r\n+            </Link> */}\r\n+            <Navbar.Toggle\r\n+              aria-controls=\"navbarSupportedContent\"\r\n+              onClick={handleToggle}\r\n+              >\r\n+              <span className={styles.menu_icon}>\r\n+                <FontAwesomeIcon\r\n+                  icon={faBars}\r\n+                  height={40}\r\n+                  width={40}\r\n+                  color=\"white\"\r\n+                  className={styles.bar}\r\n+                />\r\n+              </span>\r\n+            </Navbar.Toggle>\r\n+            <Navbar.Collapse\r\n+              id=\"navbarSupportedContent\"\r\n+              className={isOpen ? styles.show : \"\"}\r\n+            >\r\n+              <Nav className={styles.nav}>\r\n+                <div className={styles.logo}>\r\n+                  <Link href={\"/home\"}>\r\n+                    <Image\r\n+                      src={logo}\r\n+                      alt=\"logo\"\r\n+                      className={styles.logo}\r\n+                    ></Image>\r\n+                  </Link>\r\n+                </div>\r\n+                <div className={styles.nav}>\r\n+                  <Link href=\"/home\" passHref legacyBehavior>\r\n+                    <a className={styles.links}>\r\n+                      <FontAwesomeIcon icon={faHome} className={styles.icon} />{\" \"}\r\n+                      Home\r\n+                    </a>\r\n+                  </Link>\r\n+\r\n+                  <Link href=\"/Tree\" passHref legacyBehavior>\r\n+                    <a className={styles.links}>\r\n+                      <FontAwesomeIcon icon={faUsers} className={styles.icon} />{\" \"}\r\n+                      All Users\r\n+                    </a>\r\n+                  </Link>\r\n+\r\n+                  <Link href=\"/contact\" passHref legacyBehavior>\r\n+                    <a className={styles.links}>\r\n+                      <FontAwesomeIcon icon={faPhone} className={styles.icon} />{\" \"}\r\n+                      Contact\r\n+                    </a>\r\n+                  </Link>\r\n+                  {!isAuthenticated ? (\r\n+                    <Link href=\"/Login\" passHref legacyBehavior>\r\n+                      <a className={styles.links}>\r\n+                        <FontAwesomeIcon\r\n+                          icon={faSignOutAlt}\r\n+                          className={styles.icon}\r\n+                        />{\" \"}\r\n+                        Login\r\n+                      </a>\r\n+                    </Link>\r\n+                  ) : (\r\n+                    <>\r\n+                      <Button\r\n+                        variant=\"outline-light\"\r\n+                        className={styles.links}\r\n+                        onClick={handleOpenModal}\r\n+                      >\r\n+                        <FontAwesomeIcon\r\n+                          icon={faBitcoin}\r\n+                          className={styles.icon}\r\n+                        />\r\n+                        Coins ({coin})\r\n+                      </Button>\r\n+                      <Button\r\n+                        variant=\"outline-light\"\r\n+                        className={styles.links}\r\n+                        onClick={() => setIsPasswordModalOpen(true)}\r\n+                      >\r\n+                        <FontAwesomeIcon icon={faKey} className={styles.icon} />\r\n+                        Change Password\r\n+                      </Button>\r\n+                      <Button\r\n+                        variant=\"outline-light\"\r\n+                        className={styles.links}\r\n+                        onClick={handleLogout}\r\n+                      >\r\n+                        <FontAwesomeIcon\r\n+                          icon={faSignOutAlt}\r\n+                          className={styles.icon}\r\n+                        />\r\n+                        Logout\r\n+                      </Button>\r\n+                    </>\r\n+                  )}\r\n+                </div>\r\n+              </Nav>\r\n+            </Navbar.Collapse>\r\n+          </Container>\r\n+        </Navbar>\r\n+      </header>\r\n+\r\n+      {isModalOpen && (\r\n+        <div className={styles.modalBackdrop} onClick={handleCloseModal}>\r\n+          <div\r\n+            className={styles.modalContent}\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <div className={styles.modalColumn}>\r\n+              <h3>\r\n+                Your Coins<span>&nbsp;&nbsp;&nbsp;{coin}</span>\r\n+              </h3>\r\n+              <div>\r\n+                {\" \"}\r\n+                <a\r\n+                  href=\"https://wa.me/+919643568010\"\r\n+                  target=\"_blank\"\r\n+                  rel=\"noopener noreferrer\"\r\n+                >\r\n+                  click here to redeem code\r\n+                  <img\r\n+                    src=\"https://i.pinimg.com/originals/5a/5c/53/5a5c53a8cf5124a6681a5db0493b549a.png\"\r\n+                    alt=\"Chat on WhatsApp\"\r\n+                    // className={s.whatsappIcon}\r\n+                    style={{ height: \"40px\", width: \"40px\" }}\r\n+                  />\r\n+                </a>\r\n+              </div>\r\n+            </div>\r\n           </div>\r\n-        </li>\r\n-        <li className={style.items}>\r\n-          <div className={style.name}>\r\n-            <Link href=\"/Tree\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n-              <p>Alluser</p>\r\n-            </Link>\r\n-            <hr className={style.line} />\r\n+        </div>\r\n+      )}\r\n+\r\n+      {isPasswordModalOpen && (\r\n+        <div className={styles.modalBackdrop} onClick={handleCloseModal}>\r\n+          <div\r\n+            className={styles.modalContent}\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <div className={styles.modalColumn}>\r\n+              <h3>Change Password</h3>\r\n+              <Form.Group controlId=\"newPassword\">\r\n+                <Form.Label>New Password:</Form.Label>\r\n+                <Form.Control\r\n+                  type=\"password\"\r\n+                  value={newPassword}\r\n+                  onChange={(e) => setNewPassword(e.target.value)}\r\n+                  placeholder=\"Enter new password\"\r\n+                />\r\n+              </Form.Group>\r\n+              <Form.Group controlId=\"confirmPassword\">\r\n+                <Form.Label>Confirm Password:</Form.Label>\r\n+                <Form.Control\r\n+                  type=\"password\"\r\n+                  value={confirmPassword}\r\n+                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n+                  placeholder=\"Confirm new password\"\r\n+                />\r\n+              </Form.Group>\r\n+            </div>\r\n+            <div className={styles.modalColumn}>\r\n+              <Button\r\n+                variant=\"success\"\r\n+                onClick={handleChangePassword}\r\n+                className={styles.links}\r\n+                style={{\r\n+                  backgroundColor: \"green\",\r\n+                  color: \"white\",\r\n+                  padding: \"5px\",\r\n+                  marginTop: \"5px\",\r\n+                }}\r\n+              >\r\n+                Set Password\r\n+              </Button>\r\n+            </div>\r\n           </div>\r\n-        </li>\r\n-        <li className={style.items}>\r\n-          <div className={style.name}>\r\n-            <p>Skins</p>\r\n-            <hr className={style.line} />\r\n-          </div>\r\n-        </li>\r\n-        <li className={style.items}>\r\n-          <div className={style.name}>\r\n-            <Link href=\"/contact\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n-              <p>Contact</p>\r\n-            </Link>\r\n-            <hr className={style.line} />\r\n-          </div>\r\n-        </li>\r\n-        <li className={style.items}>\r\n-          <div className={style.name}>\r\n-            {!isAuthenticated ? (\r\n-              <Link href=\"/Login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n-                <p>Login</p>\r\n-              </Link>\r\n-            ) : (\r\n-              <button className={style.links} onClick={handleLogout}>\r\n-                Logout\r\n-              </button>\r\n-            )}\r\n-            <hr className={style.line} />\r\n-          </div>\r\n-        </li>\r\n-      </ul>\r\n-    </>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n   );\r\n };\r\n \r\n-export default Navbar;\r\n+export default Header;\r\n"
                },
                {
                    "date": 1723209299170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import styles from \"./index.module.scss\";\r\n import { useRouter } from \"next/router\";\r\n import axios from \"axios\";\r\n import Image from \"next/image\";\r\n-import logo from \"@/public/logo.png\";\r\n+// import logo from \"@/public/logo.png\";\r\n \r\n const Header = () => {\r\n   const [isFixed, setIsFixed] = useState(false);\r\n   const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n@@ -205,13 +205,13 @@\n             >\r\n               <Nav className={styles.nav}>\r\n                 <div className={styles.logo}>\r\n                   <Link href={\"/home\"}>\r\n-                    <Image\r\n+                    {/* <Image\r\n                       src={logo}\r\n                       alt=\"logo\"\r\n                       className={styles.logo}\r\n-                    ></Image>\r\n+                    ></Image> */}\r\n                   </Link>\r\n                 </div>\r\n                 <div className={styles.nav}>\r\n                   <Link href=\"/home\" passHref legacyBehavior>\r\n"
                },
                {
                    "date": 1723209318063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,25 @@\n-import { useEffect, useState } from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import style from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n-import { Navbar, Nav, Container, Button, Form } from \"react-bootstrap\";\r\n-import { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\r\n-import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n-import {\r\n-  faBars,\r\n-  faHome,\r\n-  faUsers,\r\n-  faPhone,\r\n-  faSignOutAlt,\r\n-  faKey,\r\n-} from \"@fortawesome/free-solid-svg-icons\";\r\n-import styles from \"./index.module.scss\";\r\n+import axios from \"axios\";\r\n import { useRouter } from \"next/router\";\r\n-import axios from \"axios\";\r\n-import Image from \"next/image\";\r\n-// import logo from \"@/public/logo.png\";\r\n \r\n-const Header = () => {\r\n-  const [isFixed, setIsFixed] = useState(false);\r\n-  const [backgroundColor, setBackgroundColor] = useState(\"transparent\");\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n-  const [isModalOpen, setIsModalOpen] = useState(false);\r\n-  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\r\n-  const [redeemAmount, setRedeemAmount] = useState(\"\");\r\n-  const [coin, setCoins] = useState<number>(0);\r\n+const Navbar = () => {\r\n+  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n+  const [coins, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n-  const [newPassword, setNewPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n   const router = useRouter();\r\n+  \r\n \r\n-  useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      const scrolled = window.scrollY > 50;\r\n-      setIsFixed(scrolled);\r\n-      setBackgroundColor(scrolled ? \"#006739\" : \"transparent\");\r\n-    };\r\n+  // Toggle menu visibility\r\n+  const toggleMenu = () => {\r\n+    setIsMenuOpen((prevState) => !prevState);\r\n+  };\r\n+  \r\n \r\n-    window.addEventListener(\"scroll\", handleScroll);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener(\"scroll\", handleScroll);\r\n-    };\r\n-  }, []);\r\n-\r\n+  // Check authentication status and fetch user data\r\n   useEffect(() => {\r\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     setIsAuthenticated(!!token);\r\n@@ -73,296 +47,86 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isAuthenticated]);\r\n+  }, [isAuthenticated]); // Empty dependency array to run only on mount\r\n \r\n-  const handleToggle = () => {\r\n-    setIsOpen(!isOpen);\r\n-  };\r\n-\r\n-  const handleLogout = () => {\r\n+  const handleLogout = async () => {\r\n+    // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n     localStorage.removeItem(\"userCoins\");\r\n     localStorage.removeItem(\"role\");\r\n+\r\n+    // Reset state\r\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n-    router.push(\"/\");\r\n-  };\r\n \r\n-  const handleOpenModal = () => {\r\n-    setIsModalOpen(true);\r\n+    // Redirect to home page\r\n+    router.push(\"/\").then(() => {\r\n+      // Ensure the page reloads to reflect logout\r\n+      window.location.reload();\r\n+    });\r\n   };\r\n \r\n-  const handleCloseModal = () => {\r\n-    setIsModalOpen(false);\r\n-    setIsPasswordModalOpen(false);\r\n-  };\r\n-\r\n-  const handleRedeemChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    setRedeemAmount(e.target.value);\r\n-  };\r\n-\r\n-  const handleRedeem = async () => {\r\n-    const coins = parseInt(redeemAmount, 10);\r\n-    if (isNaN(coins) || coins <= 0) {\r\n-      alert(\"Please enter a valid amount.\");\r\n-      return;\r\n-    }\r\n-    if (coins > coin) {\r\n-      alert(\"You do not have enough coins to redeem this amount.\");\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"accessToken\");\r\n-      const userId = localStorage.getItem(\"userId\");\r\n-      if (token && userId) {\r\n-        await axios.post(\r\n-          `https://www.referback.trollsufficient.com/admin/redeem-coins`,\r\n-          { userId, coins },\r\n-          {\r\n-            headers: {\r\n-              Authorization: `Bearer ${token}`,\r\n-              \"Content-Type\": \"application/json\",\r\n-            },\r\n-          }\r\n-        );\r\n-\r\n-        setCoins(coin - coins);\r\n-        setRedeemAmount(\"\");\r\n-        handleCloseModal();\r\n-        window.location.reload();\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Error redeeming coins:\", error);\r\n-      alert(\"There was an error redeeming coins. Please try again.\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleChangePassword = async () => {\r\n-    if (newPassword !== confirmPassword) {\r\n-      alert(\"Passwords do not match.\");\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const token = localStorage.getItem(\"accessToken\");\r\n-      const userId = localStorage.getItem(\"userId\"); // Make sure this is correct\r\n-      if (token && userId) {\r\n-        await axios.put(\r\n-          `https://www.referback.trollsufficient.com/admin/set-password/${userId}`,\r\n-          { password: newPassword },\r\n-          {\r\n-            headers: {\r\n-              Authorization: `Bearer ${token}`,\r\n-              \"Content-Type\": \"application/json\",\r\n-            },\r\n-          }\r\n-        );\r\n-\r\n-        alert(\"Password changed successfully.\");\r\n-        setNewPassword(\"\");\r\n-        setConfirmPassword(\"\");\r\n-        handleCloseModal();\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Error changing password:\", error);\r\n-      alert(\"There was an error changing the password. Please try again.\");\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n-    <div className={styles.container}>\r\n-      <header\r\n-        className={`${styles.navbar} ${isFixed ? styles.fixed : \"\"}`}\r\n-        style={{ backgroundColor }}\r\n-      >\r\n-        <Navbar expand=\"lg\" bg=\"transparent\">\r\n-          <Container style={{height:\"70px\"}}>\r\n-            {/* <Link href=\"/\" passHref legacyBehavior>\r\n-              <a className={styles.brand}>MyApp</a>\r\n-            </Link> */}\r\n-            <Navbar.Toggle\r\n-              aria-controls=\"navbarSupportedContent\"\r\n-              onClick={handleToggle}\r\n-              >\r\n-              <span className={styles.menu_icon}>\r\n-                <FontAwesomeIcon\r\n-                  icon={faBars}\r\n-                  height={40}\r\n-                  width={40}\r\n-                  color=\"white\"\r\n-                  className={styles.bar}\r\n-                />\r\n-              </span>\r\n-            </Navbar.Toggle>\r\n-            <Navbar.Collapse\r\n-              id=\"navbarSupportedContent\"\r\n-              className={isOpen ? styles.show : \"\"}\r\n-            >\r\n-              <Nav className={styles.nav}>\r\n-                <div className={styles.logo}>\r\n-                  <Link href={\"/home\"}>\r\n-                    {/* <Image\r\n-                      src={logo}\r\n-                      alt=\"logo\"\r\n-                      className={styles.logo}\r\n-                    ></Image> */}\r\n-                  </Link>\r\n-                </div>\r\n-                <div className={styles.nav}>\r\n-                  <Link href=\"/home\" passHref legacyBehavior>\r\n-                    <a className={styles.links}>\r\n-                      <FontAwesomeIcon icon={faHome} className={styles.icon} />{\" \"}\r\n-                      Home\r\n-                    </a>\r\n-                  </Link>\r\n-\r\n-                  <Link href=\"/Tree\" passHref legacyBehavior>\r\n-                    <a className={styles.links}>\r\n-                      <FontAwesomeIcon icon={faUsers} className={styles.icon} />{\" \"}\r\n-                      All Users\r\n-                    </a>\r\n-                  </Link>\r\n-\r\n-                  <Link href=\"/contact\" passHref legacyBehavior>\r\n-                    <a className={styles.links}>\r\n-                      <FontAwesomeIcon icon={faPhone} className={styles.icon} />{\" \"}\r\n-                      Contact\r\n-                    </a>\r\n-                  </Link>\r\n-                  {!isAuthenticated ? (\r\n-                    <Link href=\"/Login\" passHref legacyBehavior>\r\n-                      <a className={styles.links}>\r\n-                        <FontAwesomeIcon\r\n-                          icon={faSignOutAlt}\r\n-                          className={styles.icon}\r\n-                        />{\" \"}\r\n-                        Login\r\n-                      </a>\r\n-                    </Link>\r\n-                  ) : (\r\n-                    <>\r\n-                      <Button\r\n-                        variant=\"outline-light\"\r\n-                        className={styles.links}\r\n-                        onClick={handleOpenModal}\r\n-                      >\r\n-                        <FontAwesomeIcon\r\n-                          icon={faBitcoin}\r\n-                          className={styles.icon}\r\n-                        />\r\n-                        Coins ({coin})\r\n-                      </Button>\r\n-                      <Button\r\n-                        variant=\"outline-light\"\r\n-                        className={styles.links}\r\n-                        onClick={() => setIsPasswordModalOpen(true)}\r\n-                      >\r\n-                        <FontAwesomeIcon icon={faKey} className={styles.icon} />\r\n-                        Change Password\r\n-                      </Button>\r\n-                      <Button\r\n-                        variant=\"outline-light\"\r\n-                        className={styles.links}\r\n-                        onClick={handleLogout}\r\n-                      >\r\n-                        <FontAwesomeIcon\r\n-                          icon={faSignOutAlt}\r\n-                          className={styles.icon}\r\n-                        />\r\n-                        Logout\r\n-                      </Button>\r\n-                    </>\r\n-                  )}\r\n-                </div>\r\n-              </Nav>\r\n-            </Navbar.Collapse>\r\n-          </Container>\r\n-        </Navbar>\r\n-      </header>\r\n-\r\n-      {isModalOpen && (\r\n-        <div className={styles.modalBackdrop} onClick={handleCloseModal}>\r\n-          <div\r\n-            className={styles.modalContent}\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <div className={styles.modalColumn}>\r\n-              <h3>\r\n-                Your Coins<span>&nbsp;&nbsp;&nbsp;{coin}</span>\r\n-              </h3>\r\n-              <div>\r\n-                {\" \"}\r\n-                <a\r\n-                  href=\"https://wa.me/+919643568010\"\r\n-                  target=\"_blank\"\r\n-                  rel=\"noopener noreferrer\"\r\n-                >\r\n-                  click here to redeem code\r\n-                  <img\r\n-                    src=\"https://i.pinimg.com/originals/5a/5c/53/5a5c53a8cf5124a6681a5db0493b549a.png\"\r\n-                    alt=\"Chat on WhatsApp\"\r\n-                    // className={s.whatsappIcon}\r\n-                    style={{ height: \"40px\", width: \"40px\" }}\r\n-                  />\r\n-                </a>\r\n-              </div>\r\n-            </div>\r\n+    <>\r\n+      <div className={style.hamburger} onClick={toggleMenu}>\r\n+        â˜°\r\n+      </div>\r\n+      <div className={style.image}></div>\r\n+      <div className={style.search_box}>\r\n+        <input className={style.input} placeholder=\"Enter Favorite Skins\" />\r\n+      </div>\r\n+      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n+        <li className={style.items}>\r\n+          <div className={style.name}>\r\n+            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+              <p>Home</p>\r\n+            </Link>\r\n+            <hr className={style.line} />\r\n           </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {isPasswordModalOpen && (\r\n-        <div className={styles.modalBackdrop} onClick={handleCloseModal}>\r\n-          <div\r\n-            className={styles.modalContent}\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <div className={styles.modalColumn}>\r\n-              <h3>Change Password</h3>\r\n-              <Form.Group controlId=\"newPassword\">\r\n-                <Form.Label>New Password:</Form.Label>\r\n-                <Form.Control\r\n-                  type=\"password\"\r\n-                  value={newPassword}\r\n-                  onChange={(e) => setNewPassword(e.target.value)}\r\n-                  placeholder=\"Enter new password\"\r\n-                />\r\n-              </Form.Group>\r\n-              <Form.Group controlId=\"confirmPassword\">\r\n-                <Form.Label>Confirm Password:</Form.Label>\r\n-                <Form.Control\r\n-                  type=\"password\"\r\n-                  value={confirmPassword}\r\n-                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n-                  placeholder=\"Confirm new password\"\r\n-                />\r\n-              </Form.Group>\r\n-            </div>\r\n-            <div className={styles.modalColumn}>\r\n-              <Button\r\n-                variant=\"success\"\r\n-                onClick={handleChangePassword}\r\n-                className={styles.links}\r\n-                style={{\r\n-                  backgroundColor: \"green\",\r\n-                  color: \"white\",\r\n-                  padding: \"5px\",\r\n-                  marginTop: \"5px\",\r\n-                }}\r\n-              >\r\n-                Set Password\r\n-              </Button>\r\n-            </div>\r\n+        </li>\r\n+        <li className={style.items}>\r\n+          <div className={style.name}>\r\n+            <Link href=\"/Tree\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+              <p>Alluser</p>\r\n+            </Link>\r\n+            <hr className={style.line} />\r\n           </div>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n+        </li>\r\n+        <li className={style.items}>\r\n+          <div className={style.name}>\r\n+            <p>Skins</p>\r\n+            <hr className={style.line} />\r\n+          </div>\r\n+        </li>\r\n+        <li className={style.items}>\r\n+          <div className={style.name}>\r\n+            <Link href=\"/contact\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+              <p>Contact</p>\r\n+            </Link>\r\n+            <hr className={style.line} />\r\n+          </div>\r\n+        </li>\r\n+        <li className={style.items}>\r\n+          <div className={style.name}>\r\n+            {!isAuthenticated ? (\r\n+              <Link href=\"/Login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+                <p>Login</p>\r\n+              </Link>\r\n+            ) : (\r\n+              <button className={style.links} onClick={handleLogout}>\r\n+                Logout\r\n+              </button>\r\n+            )}\r\n+            <hr className={style.line} />\r\n+          </div>\r\n+        </li>\r\n+      </ul>\r\n+    </>\r\n   );\r\n };\r\n \r\n-export default Header;\r\n+export default Navbar;\r\n"
                },
                {
                    "date": 1723209401984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,11 @@\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n-\r\n-    const fetchCoins = async () => {\r\n+console.log(\"Dssa\",token)\r\n+console.log(\"Dssssa\",role)    \r\n+const fetchCoins = async () => {\r\n       if (token) {\r\n         try {\r\n           const userId = localStorage.getItem(\"userId\");\r\n           if (userId) {\r\n"
                }
            ],
            "date": 1723108443982,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport style from './index.module.css';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.hamburger} onClick={toggleMenu}>\r\n        â˜°\r\n      </div>\r\n      <div className={style.image}>\r\n      </div>\r\n      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : ''}`}>\r\n        <li className={style.items}>\r\n          <div className={style.name}>\r\n            <p>Home</p>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items}>\r\n          <div className={style.name}>\r\n            <p>Cluster</p>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items}>\r\n          <div className={style.name}>\r\n            <p>Skins</p>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items}>\r\n          <div className={style.name}>\r\n            <p>Contact</p>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items}>\r\n          <div className={style.name}>\r\n            <p>Login</p>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n"
        }
    ]
}